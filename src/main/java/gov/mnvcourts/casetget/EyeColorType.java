//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.11.03 at 11:26:33 PM CDT 
//


package gov.mnvcourts.casetget;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for EyeColorType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="EyeColorType">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="Black"/>
 *     &lt;enumeration value="Blue"/>
 *     &lt;enumeration value="Brown"/>
 *     &lt;enumeration value="Gray"/>
 *     &lt;enumeration value="Green"/>
 *     &lt;enumeration value="Hazel"/>
 *     &lt;enumeration value="Maroon"/>
 *     &lt;enumeration value="Multi Colored"/>
 *     &lt;enumeration value="Pink"/>
 *     &lt;enumeration value="Unknown"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "EyeColorType")
@XmlEnum
public enum EyeColorType {

    @XmlEnumValue("Black")
    BLACK("Black"),
    @XmlEnumValue("Blue")
    BLUE("Blue"),
    @XmlEnumValue("Brown")
    BROWN("Brown"),
    @XmlEnumValue("Gray")
    GRAY("Gray"),
    @XmlEnumValue("Green")
    GREEN("Green"),
    @XmlEnumValue("Hazel")
    HAZEL("Hazel"),
    @XmlEnumValue("Maroon")
    MAROON("Maroon"),
    @XmlEnumValue("Multi Colored")
    MULTI_COLORED("Multi Colored"),
    @XmlEnumValue("Pink")
    PINK("Pink"),
    @XmlEnumValue("Unknown")
    UNKNOWN("Unknown");
    private final String value;

    EyeColorType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static EyeColorType fromValue(String v) {
        for (EyeColorType c: EyeColorType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
