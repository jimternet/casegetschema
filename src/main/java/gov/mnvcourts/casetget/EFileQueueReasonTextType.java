//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.11.03 at 11:26:33 PM CDT 
//


package gov.mnvcourts.casetget;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for EFileQueueReasonTextType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="EFileQueueReasonTextType">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="Arrest flag exists"/>
 *     &lt;enumeration value="Case type undetermined"/>
 *     &lt;enumeration value="Citation Delete"/>
 *     &lt;enumeration value="Citation Update"/>
 *     &lt;enumeration value="Duplicate citation number"/>
 *     &lt;enumeration value="Fine amount needed"/>
 *     &lt;enumeration value="Forced by OrgChart"/>
 *     &lt;enumeration value="Forced By Rejection"/>
 *     &lt;enumeration value="Matches existing charge"/>
 *     &lt;enumeration value="Missing appear by date"/>
 *     &lt;enumeration value="Missing offense code mapping"/>
 *     &lt;enumeration value="Multiple offense code mappings exist"/>
 *     &lt;enumeration value="Possible party matches"/>
 *     &lt;enumeration value="Possible vehicle matches"/>
 *     &lt;enumeration value="Reason not available"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "EFileQueueReasonTextType")
@XmlEnum
public enum EFileQueueReasonTextType {

    @XmlEnumValue("Arrest flag exists")
    ARREST_FLAG_EXISTS("Arrest flag exists"),
    @XmlEnumValue("Case type undetermined")
    CASE_TYPE_UNDETERMINED("Case type undetermined"),
    @XmlEnumValue("Citation Delete")
    CITATION_DELETE("Citation Delete"),
    @XmlEnumValue("Citation Update")
    CITATION_UPDATE("Citation Update"),
    @XmlEnumValue("Duplicate citation number")
    DUPLICATE_CITATION_NUMBER("Duplicate citation number"),
    @XmlEnumValue("Fine amount needed")
    FINE_AMOUNT_NEEDED("Fine amount needed"),
    @XmlEnumValue("Forced by OrgChart")
    FORCED_BY_ORG_CHART("Forced by OrgChart"),
    @XmlEnumValue("Forced By Rejection")
    FORCED_BY_REJECTION("Forced By Rejection"),
    @XmlEnumValue("Matches existing charge")
    MATCHES_EXISTING_CHARGE("Matches existing charge"),
    @XmlEnumValue("Missing appear by date")
    MISSING_APPEAR_BY_DATE("Missing appear by date"),
    @XmlEnumValue("Missing offense code mapping")
    MISSING_OFFENSE_CODE_MAPPING("Missing offense code mapping"),
    @XmlEnumValue("Multiple offense code mappings exist")
    MULTIPLE_OFFENSE_CODE_MAPPINGS_EXIST("Multiple offense code mappings exist"),
    @XmlEnumValue("Possible party matches")
    POSSIBLE_PARTY_MATCHES("Possible party matches"),
    @XmlEnumValue("Possible vehicle matches")
    POSSIBLE_VEHICLE_MATCHES("Possible vehicle matches"),
    @XmlEnumValue("Reason not available")
    REASON_NOT_AVAILABLE("Reason not available");
    private final String value;

    EFileQueueReasonTextType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static EFileQueueReasonTextType fromValue(String v) {
        for (EFileQueueReasonTextType c: EFileQueueReasonTextType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
