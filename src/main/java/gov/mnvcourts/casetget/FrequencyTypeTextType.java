//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.11.03 at 11:26:33 PM CDT 
//


package gov.mnvcourts.casetget;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for FrequencyTypeTextType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="FrequencyTypeTextType">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="Bimonthly"/>
 *     &lt;enumeration value="Biweekly"/>
 *     &lt;enumeration value="Day(s)"/>
 *     &lt;enumeration value="Month(s)"/>
 *     &lt;enumeration value="One Time"/>
 *     &lt;enumeration value="Quarter(s)"/>
 *     &lt;enumeration value="Semiannually"/>
 *     &lt;enumeration value="Semimonthly"/>
 *     &lt;enumeration value="Semiweekly"/>
 *     &lt;enumeration value="Week(s)"/>
 *     &lt;enumeration value="Year(s)"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "FrequencyTypeTextType")
@XmlEnum
public enum FrequencyTypeTextType {

    @XmlEnumValue("Bimonthly")
    BIMONTHLY("Bimonthly"),
    @XmlEnumValue("Biweekly")
    BIWEEKLY("Biweekly"),
    @XmlEnumValue("Day(s)")
    DAY_S("Day(s)"),
    @XmlEnumValue("Month(s)")
    MONTH_S("Month(s)"),
    @XmlEnumValue("One Time")
    ONE_TIME("One Time"),
    @XmlEnumValue("Quarter(s)")
    QUARTER_S("Quarter(s)"),
    @XmlEnumValue("Semiannually")
    SEMIANNUALLY("Semiannually"),
    @XmlEnumValue("Semimonthly")
    SEMIMONTHLY("Semimonthly"),
    @XmlEnumValue("Semiweekly")
    SEMIWEEKLY("Semiweekly"),
    @XmlEnumValue("Week(s)")
    WEEK_S("Week(s)"),
    @XmlEnumValue("Year(s)")
    YEAR_S("Year(s)");
    private final String value;

    FrequencyTypeTextType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static FrequencyTypeTextType fromValue(String v) {
        for (FrequencyTypeTextType c: FrequencyTypeTextType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
