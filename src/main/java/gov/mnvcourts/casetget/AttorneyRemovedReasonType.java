//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.11.03 at 11:26:33 PM CDT 
//


package gov.mnvcourts.casetget;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for AttorneyRemovedReasonType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="AttorneyRemovedReasonType">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="Attorney Connection Added in Error"/>
 *     &lt;enumeration value="Deceased"/>
 *     &lt;enumeration value="Discharged"/>
 *     &lt;enumeration value="Substitution of Attorney"/>
 *     &lt;enumeration value="Test Reason Code"/>
 *     &lt;enumeration value="Withdrawn"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "AttorneyRemovedReasonType")
@XmlEnum
public enum AttorneyRemovedReasonType {

    @XmlEnumValue("Attorney Connection Added in Error")
    ATTORNEY_CONNECTION_ADDED_IN_ERROR("Attorney Connection Added in Error"),
    @XmlEnumValue("Deceased")
    DECEASED("Deceased"),
    @XmlEnumValue("Discharged")
    DISCHARGED("Discharged"),
    @XmlEnumValue("Substitution of Attorney")
    SUBSTITUTION_OF_ATTORNEY("Substitution of Attorney"),
    @XmlEnumValue("Test Reason Code")
    TEST_REASON_CODE("Test Reason Code"),
    @XmlEnumValue("Withdrawn")
    WITHDRAWN("Withdrawn");
    private final String value;

    AttorneyRemovedReasonType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static AttorneyRemovedReasonType fromValue(String v) {
        for (AttorneyRemovedReasonType c: AttorneyRemovedReasonType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
