//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.11.04 at 12:20:40 AM CDT 
//


package gov.mncourts.caseget;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for AddressUnitTypeType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="AddressUnitTypeType"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string"&gt;
 *     &lt;enumeration value="Apartment"/&gt;
 *     &lt;enumeration value="Building"/&gt;
 *     &lt;enumeration value="Department"/&gt;
 *     &lt;enumeration value="Floor"/&gt;
 *     &lt;enumeration value="Lot"/&gt;
 *     &lt;enumeration value="Room"/&gt;
 *     &lt;enumeration value="Suite"/&gt;
 *     &lt;enumeration value="Trailer"/&gt;
 *     &lt;enumeration value="Unit"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "AddressUnitTypeType")
@XmlEnum
public enum AddressUnitTypeType {

    @XmlEnumValue("Apartment")
    APARTMENT("Apartment"),
    @XmlEnumValue("Building")
    BUILDING("Building"),
    @XmlEnumValue("Department")
    DEPARTMENT("Department"),
    @XmlEnumValue("Floor")
    FLOOR("Floor"),
    @XmlEnumValue("Lot")
    LOT("Lot"),
    @XmlEnumValue("Room")
    ROOM("Room"),
    @XmlEnumValue("Suite")
    SUITE("Suite"),
    @XmlEnumValue("Trailer")
    TRAILER("Trailer"),
    @XmlEnumValue("Unit")
    UNIT("Unit");
    private final String value;

    AddressUnitTypeType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static AddressUnitTypeType fromValue(String v) {
        for (AddressUnitTypeType c: AddressUnitTypeType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
