//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.11.04 at 12:20:40 AM CDT 
//


package gov.mncourts.caseget;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for PrefixNameType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="PrefixNameType"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string"&gt;
 *     &lt;enumeration value="Agent"/&gt;
 *     &lt;enumeration value="Deputy"/&gt;
 *     &lt;enumeration value="Detective"/&gt;
 *     &lt;enumeration value="Dr."/&gt;
 *     &lt;enumeration value="Honorable"/&gt;
 *     &lt;enumeration value="Miss"/&gt;
 *     &lt;enumeration value="Mr."/&gt;
 *     &lt;enumeration value="Mrs."/&gt;
 *     &lt;enumeration value="Ms."/&gt;
 *     &lt;enumeration value="Officer"/&gt;
 *     &lt;enumeration value="Reverend"/&gt;
 *     &lt;enumeration value="Trooper"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "PrefixNameType")
@XmlEnum
public enum PrefixNameType {

    @XmlEnumValue("Agent")
    AGENT("Agent"),
    @XmlEnumValue("Deputy")
    DEPUTY("Deputy"),
    @XmlEnumValue("Detective")
    DETECTIVE("Detective"),
    @XmlEnumValue("Dr.")
    DR("Dr."),
    @XmlEnumValue("Honorable")
    HONORABLE("Honorable"),
    @XmlEnumValue("Miss")
    MISS("Miss"),
    @XmlEnumValue("Mr.")
    MR("Mr."),
    @XmlEnumValue("Mrs.")
    MRS("Mrs."),
    @XmlEnumValue("Ms.")
    MS("Ms."),
    @XmlEnumValue("Officer")
    OFFICER("Officer"),
    @XmlEnumValue("Reverend")
    REVEREND("Reverend"),
    @XmlEnumValue("Trooper")
    TROOPER("Trooper");
    private final String value;

    PrefixNameType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static PrefixNameType fromValue(String v) {
        for (PrefixNameType c: PrefixNameType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
