//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.11.04 at 12:20:40 AM CDT 
//


package gov.mncourts.caseget;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for DirectionTextType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="DirectionTextType"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string"&gt;
 *     &lt;enumeration value="East"/&gt;
 *     &lt;enumeration value="North"/&gt;
 *     &lt;enumeration value="Northeast"/&gt;
 *     &lt;enumeration value="Northwest"/&gt;
 *     &lt;enumeration value="South"/&gt;
 *     &lt;enumeration value="Southeast"/&gt;
 *     &lt;enumeration value="Southwest"/&gt;
 *     &lt;enumeration value="West"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "DirectionTextType")
@XmlEnum
public enum DirectionTextType {

    @XmlEnumValue("East")
    EAST("East"),
    @XmlEnumValue("North")
    NORTH("North"),
    @XmlEnumValue("Northeast")
    NORTHEAST("Northeast"),
    @XmlEnumValue("Northwest")
    NORTHWEST("Northwest"),
    @XmlEnumValue("South")
    SOUTH("South"),
    @XmlEnumValue("Southeast")
    SOUTHEAST("Southeast"),
    @XmlEnumValue("Southwest")
    SOUTHWEST("Southwest"),
    @XmlEnumValue("West")
    WEST("West");
    private final String value;

    DirectionTextType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static DirectionTextType fromValue(String v) {
        for (DirectionTextType c: DirectionTextType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
